{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","clockId","undefined","newClockId","window","setInterval","date","setState","console","info","this","prevProps","oldName","clockName","newName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAC3CC,aAASC,GAHb,uDAME,WAA2B,IAAD,OAClBC,EAAaC,OAAOC,aAAY,WACpC,IAAMC,GAAO,IAAIR,MAAOC,cAAcC,OAAO,IAAK,GAElD,EAAKO,SAAS,CACZV,KAAMS,IAIRE,QAAQC,KAAKH,KACZ,KAEHI,KAAKH,SAAS,CACZN,QAASE,MAnBf,gCAuBE,SAAmBQ,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUJ,KAAKK,MAAMF,UAEvBC,IAAYF,GAEdJ,QAAQQ,MAAR,uBAA8BJ,EAA9B,eAA4CE,MA7BlD,kCAiCE,WACEV,OAAOa,cAAcP,KAAKd,MAAMK,WAlCpC,oBAqCE,WACE,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKK,MAAMF,YAGb,YAED,sBAAMK,UAAU,cAAhB,SACGR,KAAKd,MAAMC,cA/CtB,GAA2BsB,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAGX,IAAMG,EAAb,4MACE7B,MAAQ,CACN8B,UAAU,EACVb,UAAW,WAHf,uDAOE,WAAqB,IAAD,OAClBT,OAAOC,aAAY,WACjB,EAAKE,SAAS,CACZM,UAAWQ,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CACZmB,UAAU,OAIdC,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CACZmB,UAAU,SAvBlB,oBA4BE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECR,KAAKd,MAAM8B,UAAY,cAAC,EAAD,CAAOb,UAAWH,KAAKd,MAAMiB,mBAjC7D,GAAyBM,IAAMC,WCZ/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.592ab29a.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: string;\n  clockId: number | undefined;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n    clockId: undefined,\n  };\n\n  componentDidMount(): void {\n    const newClockId = window.setInterval(() => {\n      const date = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({\n        time: date,\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(date);\n    }, 1000);\n\n    this.setState({\n      clockId: newClockId,\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n\n    if (newName !== oldName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.state.clockId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  // This code starts a timer\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}